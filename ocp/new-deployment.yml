apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-k8s
spec:
  selector:
    matchLabels:
      app: spring-boot-k8s
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-boot-k8s
    spec:
      containers:
        - name: spring-boot-k8s
          image: jkalume/kari-git-images:20230130.1
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
          # - name: DB_HOST   # Setting Database host address from configMap
          #   valueFrom: 
          #     configMapKeyRef:
          #       name: db-conf  # name of configMap
          #       key: host
          # - name: DB_NAME  # Setting Database name from configMap
          #   valueFrom:
          #     configMapKeyRef:
          #       name: db-conf 
          #       key: name
          - name: DB_HOST
            value: mysql
          - name: DB_NAME
            value: karisaTestDB
          - name: DB_USERNAME  # Setting Database username from Secret
            valueFrom:
              secretKeyRef:
                name: db-credentials # Secret Name
                key: username
          - name: DB_PASSWORD # Setting Database password from Secret
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password  
          args:
          - /bin/sh
          - -c
          - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/healthy
            initialDelaySeconds: 3
            periodSeconds: 5  
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080 
              # port: liveness-port, # way-2: for apply to all probes types
            failureThreshold: 30
            periodSeconds: 10
# This seperator --- below is MANDATORY!!!
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-k8s-svc
spec:
  ports:
    - protocol: "TCP"
      port: 8080    # Port inside the cluster
      targetPort: 8080  # Port exposed to the outside
  selector:
    app: spring-boot-k8s
  type: ClusterIP